#!/usr/local/bin/ruby -ws

$h    ||= false
$help ||= false

if $h or $help then
  help = [
          "autotest [options]",
          nil,
          "options:",
          "\t-h",
          "\t-help\t\tYou're looking at it.",
          nil,
          "\t-v\t\tBe verbose.",
          "\t\t\tPrints files that autotest doesn't know how to map to",
          "\t\t\ttests.",
          nil,
          "\t-rails\t\tForce rails mode. TOTALLY NOT NEEDED!!!",
          "\t\t\tRails will be automatically detected by the presence of",
          "\t\t\tconfig/environment.rb. Use this if you don't have one.",
          nil,
          "\t\t\tYou may need to run 'rake db:test:prepare' before",
          "\t\t\tstarting autotest on a rails project.",
          nil,
          "\t-spec\t\tR/Spec mode.",
          "\t\t\tRails will be automatically detected by the presence of",
          "\t\t\tconfig/environment.rb. Use this if you don't have one.",
          nil,
          "\t\t\tYou may need to run 'rake db:test:prepare' before",
          "\t\t\tstarting autotest on a rails project.",
         ]
  STDERR.puts help.join("\n")
  exit 1
end

$rspec   ||= false
$rails   ||= false

style = []
style << "rspec" if $rspec or File.directory?('spec')
style << "rails" if $rails or File.exist? 'config/environment.rb'
style << "autotest"

requre style.join("_")
Object.const_get(style.map {|s| s.capitalize}.join).run
